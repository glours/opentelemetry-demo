services:
  # Feature Flag service
  featureflagservice:
    image: ${IMAGE_NAME}:${IMAGE_VERSION}-featureflagservice
    container_name: feature-flag-service
    build:
      context: ../../
      dockerfile: ./src/featureflagservice/Dockerfile
      cache_from:
        - ${IMAGE_NAME}:${IMAGE_VERSION}-featureflagservice
    deploy:
      resources:
        limits:
          memory: 175M
    restart: unless-stopped
    ports:
      - "${FEATURE_FLAG_SERVICE_PORT}"                                  # Feature Flag Service UI
      - "${FEATURE_FLAG_GRPC_SERVICE_PORT}"                             # Feature Flag Service gRPC API
    environment:
      - FEATURE_FLAG_SERVICE_PORT
      - FEATURE_FLAG_GRPC_SERVICE_PORT
      - OTEL_EXPORTER_OTLP_ENDPOINT
      - OTEL_EXPORTER_OTLP_TRACES_PROTOCOL=grpc
      - OTEL_SERVICE_NAME=featureflagservice
      - DATABASE_URL=ecto://ffs:ffs@ffs_postgres:5432/ffs
    healthcheck:
      test: [ "CMD", "curl", "-H", "baggage: synthetic_request=true", "-f", "http://localhost:${FEATURE_FLAG_SERVICE_PORT}" ]
    depends_on:
      ffs_postgres:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"